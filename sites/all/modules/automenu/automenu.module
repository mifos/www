<?php
// $Id: automenu.module,v 1.1.4.5 2009/10/09 14:34:20 farbridges Exp $

/**
 * Implementation of hook_nodeapi().
 * Fill in menu section values if user left them empty AND there's a parent
 * menu item selected for this node type and the node is published.
 */
function automenu_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'insert':
    case 'update':
      $parent_menu = explode(":", variable_get('parentmenu' . $node->language . '_' . $node->type, '0'));
      if ($parent_menu[0] != '0') {
        if (($node->menu['link_title'] == '' || $node->menu['delete']) && $node->status == 1) {
          $new_menu = array(
            'menu_name' => $parent_menu[0],
            'link_path' => 'node/' . $node->nid,
            'link_title' => $node->title,
            'plid' => $parent_menu[1],
            'hidden' => variable_get('automenu_hide_'.$node->type, 0),
            //'customized' => true, // ?
          );
          if ($node->language) {
            $new_menu['options'] = array('langcode'=> $node->language);
          }
          if( $existing_item = db_fetch_array(db_query("SELECT mlid FROM {menu_links} WHERE link_path = '%s' AND plid = %d", 'node/' . $node->nid, $new_menu['plid']))) {
            $new_menu['mlid']=$existing_item['mlid'];
          }          
          if (!menu_link_save($new_menu)) {
            drupal_set_message(t('There was an error saving the auto-menu link.'), 'error');
          }
	  else {
      drupal_set_message(t('The page was automatically added/updated to: !menu.', array('!menu' => $parent_menu[0])));
	  }
        }
      }
      break;
  }
}

/**
 * Implementation of hook_form_alter().
 * Add the "Default Parent Menu" section to content type edit node.
 */
function automenu_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_type_form' && isset($form['identity']['type'])) {
    // Get a list of enabled languages.
    $languages = language_list('enabled');
    $languages = $languages[1];

    // Shouldn't this be language specific?!
    $options = array_merge(array("0" => "None"), menu_parent_options(menu_get_menus(), 0));

    // add a selection for "no language" selection... maybe we can find a
    // better way (I think this is what happens in language neutral situations?)
    
    
    $form['workflow']['parentmenu'] = array(
      '#type' => 'select',
      '#title' => t('Default parent menu'),
      '#default_value' => variable_get('parentmenu_' . $form['#node_type']->type, 0),
      '#options' => $options,  // TODO filter on menu items that are language neutral?
      '#description' => t('Select the default menu for nodes without a language (i.e. language neutral.)'),
    );

    foreach ($languages as $language) {
      $form['workflow']['parentmenu'. $language->language] = array(
        '#type' => 'select',
        '#title' => t('Parent menu for !lang nodes', array('!lang' => $language->name)),
        '#default_value' => variable_get('parentmenu' . $language->language . '_' . $form['#node_type']->type, 0),
        '#options' => $options,  // TODO filter on menu items of current language
	      '#description' => t('Select the default menu for nodes written in !lang.', array('!lang' => $language->name)),
      );
    }

    $form['workflow']['automenu_hide'] = array(
      '#type' => 'checkbox',
      '#title' => t('Hide automenu entry'),
      '#default_value' => variable_get('automenu_hide_' . $form['#node_type']->type, 0),
      '#description' => t('Set all auto generated menu items of this content type to hidden'),
    );


  }
}

